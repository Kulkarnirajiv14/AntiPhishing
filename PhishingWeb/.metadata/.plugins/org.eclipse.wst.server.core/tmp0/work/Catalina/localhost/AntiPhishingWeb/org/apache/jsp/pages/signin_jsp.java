/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2022-06-29 12:58:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.HashMap;
import com.helper.UserModel;
import com.helper.ConnectionManager;
import com.helper.StringHelper;

public final class signin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.helper.StringHelper");
    _jspx_imports_classes.add("com.helper.UserModel");
    _jspx_imports_classes.add("com.helper.ConnectionManager");
    _jspx_imports_classes.add("java.util.HashMap");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


String projectTitle="AntiPhishing";
	String sMethod = StringHelper.n2s(request.getParameter("methodId"));
	if (sMethod != null && sMethod.length() > 0) {
		String returnString = "";
		HashMap parameters = StringHelper.displayRequest(request);
		boolean bypasswrite = false;
		if (sMethod.equalsIgnoreCase("checkLogin")) {
			UserModel um = ConnectionManager.checkLogin(parameters);
			if (um != null) {
				session.setAttribute("USER_MODEL", um);
				returnString = "1";
			} else {
				returnString = "2";
			}
		} else if (sMethod.equalsIgnoreCase("registerNewUser")) {
			System.out.print("registrer call");
			returnString = ConnectionManager.insertIntoDB(parameters,
					"useraccounts");
		}
		if (!bypasswrite) {
			out.println(returnString);
			out.flush();
			out.close();
		}
		return;
	}
	/*   DROP TABLE IF EXISTS `useraccount`;
	 CREATE TABLE `useraccounts` (
	 `name` varchar(45) NOT NULL,
	 `emailid` varchar(45) NOT NULL,
	 `phone` varchar(45) NOT NULL,
	 `uname` varchar(45) NOT NULL,
	 `password` varchar(45) NOT NULL,
	 `address` varchar(45) NOT NULL,
	 `role` varchar(45) NOT NULL,
	 `uid` int(11) NOT NULL AUTO_INCREMENT,
	 PRIMARY KEY (`uname`,`uid`) USING BTREE,
	 UNIQUE KEY `user_email` (`emailid`),
	 UNIQUE KEY `uc` (`emailid`,`uname`,`phone`)
	 ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;

	 public static UserModel checkLogin(HashMap parameters){
	 String uname = StringHelper.n2s(parameters.get("username"));
	 String upass = StringHelper.n2s(parameters.get("pass"));
	 UserModel um = null;
	 String query = "select * from useraccount where uname like '" + uname
	 + "' and password like '" + upass + "'";
	 List l = DBUtils.getBeanList(UserModel.class, query);

	 if (l!=null&& l.size() > 0) {
	 um = (UserModel) l.get(0);
	 return um;
	 } else {
	 return null;
	 }
	 }
	
	 ===============================================
	 public static String insertIntoDB(HashMap parameters, String tabelName) {
	 Set<String> keys = parameters.keySet();
	 StringBuffer data = new StringBuffer();
	 StringBuffer value = new StringBuffer();
	 for (String key : keys) {
	 if (key.equalsIgnoreCase("methodId")
	 || key.equalsIgnoreCase("confirm")|| key.equalsIgnoreCase("repass")) {
	 continue;
	 }
	 data.append(key + ",");
	 value.append("'" + parameters.get(key).toString() + "',");
	 }
	 String sql = "insert into " + tabelName + " ("
	 + data.toString().substring(0, data.toString().length() - 1)
	 + ") values("
	 + value.toString().substring(0, value.toString().length() - 1)
	 + ")";
	 System.out.println("sql :" + sql);
	 int rows = DBUtils.executeUpdate(sql);
	 if (rows > 0) {
	 return "User Registered Successfully..!!";
	 } else {
	 return "Error..?? Somethings is wrong..??";
	 }
	 }


	 */

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Login Form</title>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("<title>");
      out.print(projectTitle );
      out.write(" Signin/Signup</title>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/theme/css/stylesighup.css\">\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/theme/js/jquery-2.1.1.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<section>\n");
      out.write("\t\t<div class=\"container\">\n");
      out.write("\t\t\t<div class=\"user signinBx\">\n");
      out.write("\t\t\t\t<div class=\"imgBx\">\n");
      out.write("\t\t\t\t\t<img\n");
      out.write("\t\t\t\t\t\tsrc=\"https://image.freepik.com/free-vector/cross-platform-business-app-illustration_82574-7639.jpg\"\n");
      out.write("\t\t\t\t\t\talt=\"\" />\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"formBx\">\n");
      out.write("\t\t\t\t\t<form id='loginform' action=\"javascript:fnLogin();\" method=\"post\">\n");
      out.write("\t\t\t\t\t\t<h2>");
      out.print(projectTitle );
      out.write(" Sign In</h2>\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"username\" placeholder=\"Username\" /> <input\n");
      out.write("\t\t\t\t\t\t\ttype=\"password\" name=\"pass\" placeholder=\"Password\" /> <input\n");
      out.write("\t\t\t\t\t\t\ttype=\"submit\" name=\"\" style=\"background-color: #008CBA;\"value=\"Login\" />\n");
      out.write("\t\t\t\t\t\t<p class=\"signup\">\n");
      out.write("\t\t\t\t\t\t\tDon't have an account ? <a href=\"#\" onclick=\"toggleForm();\">Sign\n");
      out.write("\t\t\t\t\t\t\t\tUp.</a>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"user signupBx\">\n");
      out.write("\t\t\t\t<div class=\"formBx\">\n");
      out.write("\t\t\t\t\t<form  method=\"post\"id=\"regform\">\n");
      out.write("\t\t\t\t\t\t<h2>");
      out.print(projectTitle );
      out.write(" Signup</h2>\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" name=\"name\" placeholder=\"Full Name\"\n");
      out.write("\t\t\t\t\t\t\trequired=\"required\" /> <input type=\"email\" name=\"emailid\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Email Address\" required=\"required\"\n");
      out.write("\t\t\t\t\t\t\tpattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n");
      out.write("\t\t\t\t\t\t\ttitle=\"Please enter valid email\" /> <input type=\"text\"\n");
      out.write("\t\t\t\t\t\t\tname=\"phone\" placeholder=\"Mobile Number\" pattern=\"[789][0-9]{9}\"\n");
      out.write("\t\t\t\t\t\t\ttitle=\"Please enter valid 10 digit mobile number\"\n");
      out.write("\t\t\t\t\t\t\trequired=\"required\" /> <input type=\"text\" name=\"uname\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Username\" required=\"required\" /><input\n");
      out.write("\t\t\t\t\t\t\ttype=\"password\" name=\"password\" placeholder=\"Create Password\"\n");
      out.write("\t\t\t\t\t\t\trequired=\"required\" /> <input type=\"password\" name=\"repass\"\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" required=\"required\" />\n");
      out.write("\t\t\t\t\t\t\t <input type=\"button\" onclick=\"fnRegister()\" style=\"background-color: #008CBA;\"  name=\"\" value=\"Sign Up\" />\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<!-- \t\t\t\t\t\t\tpattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\" -->\n");
      out.write("\t\t\t\t\t\t<!-- \t\t\t\t\t\t\ttitle=\"Password should contain Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\" -->\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t<p class=\"signup\">\n");
      out.write("\t\t\t\t\t\t\tAlready have an account ? <a href=\"#\" onclick=\"toggleForm();\">Sign\n");
      out.write("\t\t\t\t\t\t\t\tin.</a>\n");
      out.write("\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"imgBx\">\n");
      out.write("\t\t\t\t\t<img\n");
      out.write("\t\t\t\t\t\tsrc=\"https://assets-global.website-files.com/5bcb46130508ef456a7b2930/5c65f4ae2f71d67d0ee9f032_hero-image.png\"\n");
      out.write("\t\t\t\t\t\talt=\"\" />\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</section>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function toggleForm(){\n");
      out.write("\t  const container = document.querySelector('.container');\n");
      out.write("\t  container.classList.toggle('active');\n");
      out.write("}\n");
      out.write("function fnLogin(){\t  \n");
      out.write("\tvar str = $(\"#loginform\" ).serialize();\n");
      out.write("\t//alert(str);\n");
      out.write("\t$.post(\"");
      out.print(request.getContextPath());
      out.write("/pages/signin.jsp?methodId=checkLogin\",\n");
      out.write("\t\t\t\t\t\tstr, function(data) {\t\t\n");
      out.write("\t\t                    data = $.trim(data);\n");
      out.write("\t\t\t\t\t\t\t\tif (data==1) {\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\twindow.location.href=\"");
      out.print(request.getContextPath());
      out.write("/pages/index.jsp\";\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\talert(\"Please Enter Valid Credentials\");\n");
      out.write("\t\t\t\t\t\t\t\t$('#username').css({ \"border\": '#FF0000 1px solid'});\n");
      out.write("\t\t\t\t\t\t\t\t$('#pass').css({ \"border\": '#FF0000 1px solid'});\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("// \t\t\t\t\t\t\t$('#loginform')[0].reset();\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("   \n");
      out.write("\t}    \n");
      out.write("\t\n");
      out.write("function fnRegister(){\t\n");
      out.write("\talert(\"ok\");\n");
      out.write("\tvar str = $(\"#regform\" ).serialize();\n");
      out.write("\talert(str);\n");
      out.write("\tvar pass = $('#password').val();\n");
      out.write("\tvar cpass = $('#repass').val();\n");
      out.write("\tif(pass != cpass){\n");
      out.write("\t\talert('password and confirm password should match');\n");
      out.write("\t\t$('#password').css({ \"border\": '#FF0000 1px solid'});\n");
      out.write("\t\t$('#repass').css({ \"border\": '#FF0000 1px solid'});\n");
      out.write("\t\treturn;\t\t\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("$.post(\"");
      out.print(request.getContextPath());
      out.write("/pages/signin.jsp?methodId=registerNewUser\",\n");
      out.write("\t\t\t\t\t\tstr, function(data) {\n");
      out.write("\t\t\t\t\t\t\tdata = $.trim(data);\n");
      out.write("\t\t\t\t\t\t\tif (data==1) {\n");
      out.write("\t\t\t\t\t\t\t\t$('#regform')[0].reset();\n");
      out.write("\t\t\t\t\t\t\t\twindow.location.href=\"");
      out.print(request.getContextPath());
      out.write("/pages/login.jsp\";\n");
      out.write("\t\t\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t\t\talert(data);\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
